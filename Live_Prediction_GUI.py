#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.23a
#  in conjunction with Tcl version 8.6
#    Mar 14, 2020 01:22:52 AM IST  platform: Windows NT

import sys
import pandas as pd
import pickle
# from LoadImage import ImageLabel
import Heart_Disease_GUI
from tkinter import messagebox
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn.model_selection import train_test_split

# Machine Learning
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import RandomizedSearchCV

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = Toplevel1 (root)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    return (w, top)


class ImageLabel(tk.Label):
    """a label that displays images, and plays them if they are gifs"""
    def load(self, im):
        if isinstance(im, str):
            im = Image.open(im)
        self.loc = 0
        self.frames = []

        try:
            for i in count(1):
                self.frames.append(ImageTk.PhotoImage(im.copy()))
                im.seek(i)
        except EOFError:
            pass

        try:
            self.delay = im.info['duration']
        except:
            self.delay = 100

        if len(self.frames) == 1:
            self.config(image=self.frames[0])
        else:
            self.next_frame()

    def unload(self):
        self.config(image=None)
        self.frames = None

    def next_frame(self):
        if self.frames:
            self.loc += 1
            self.loc %= len(self.frames)
            self.config(image=self.frames[self.loc])
            self.after(self.delay, self.next_frame)



def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

from PIL import Image, ImageTk
from itertools import count


class Toplevel1:
    def __init__(self, top=None):
        self.gender = None
        self.rf_model = None

        def btnMale(event):
            self.gender = 1
            self.btnFemale.configure(background="black")
            self.btnMale.configure(background="blue")

        def btnFemale(event):
            self.gender = 0
            self.btnMale.configure(background="black")
            self.btnFemale.configure(background="blue")

        def analyze_predict(event):

            name = self.txtName.get()
            age = int(self.txtAge.get())
            sex = int(self.gender)
            cp = int(self.txtCP.current())
            trestbps = int(self.txtTrestbps.get())
            chol = int(self.txtChol.get())
            fbs = int(self.txtFbs.current())
            restecg = int(self.txtRestECG.current())#.index(self.txtRestECG.get())
            thalach = int(self.txtThalach.get())
            exang = int(self.txtExang.current())
            oldpeak = float(self.txtOldPeak.get())
            slope = int(self.txtSlope.current())
            ca = int(self.txtCA.get())
            thal = int(self.txtThal.get())

            print('\n name ',name,'\n age ', age,'\n sex ', sex,'\n cp ', cp,'\n trestbps ', trestbps,'\n chol ', chol,'\n fbs ', fbs,'\n restecg ', restecg,'\n thalach ', thalach,'\n exang ', exang,'\n oldpeak ', oldpeak,'\n slope ', slope,'\n ca ', ca,'\n thal ', thal)
            if name=='' or age =='' or sex =='' or cp ==-1 or trestbps =='' or chol =='' or fbs ==-1 or restecg ==-1 or thalach =='' or exang ==-1 or oldpeak ==-1 or slope =='' or ca =='' or thal =='':
                messagebox.showerror('Error','Please Enter all Value')
                print('Please Enter all value')
            elif oldpeak<=6.2 and ca<=3 and thal<=3 and thalach>=71 and thalach<=202 and trestbps>=94 and trestbps<=200 and chol>=126 and chol<=564:
                print('ALl Value are Correct')
                inputValue = []
                # age1 = ((int(age) - 29)  / (77-29 ))
                # print(age1)
                # trestbps1 = ((int(trestbps) - 94)/(200-94))
                # chol1 = ((int (chol) - 126)/(564-126))
                # thalach1 = ((int(thalach) - 71)/(202-71))
                # oldpeak1 = (int(oldpeak)/ (6.2))

                inputValue.append(age)
                inputValue.append(sex)
                inputValue.append(cp)
                inputValue.append(trestbps)
                inputValue.append(chol)
                inputValue.append(fbs)
                inputValue.append(restecg)
                inputValue.append(thalach)
                inputValue.append(trestbps)
                inputValue.append(oldpeak)
                inputValue.append(slope)
                inputValue.append(ca)
                inputValue.append(thal)

                print("\n")
                final_Result = self.rf_model.predict([inputValue])[0]
                print(final_Result)
                if final_Result==0:
                    photo_location = os.path.join(prog_location,"GUIImages/smile.png")
                    self._img1 = tk.PhotoImage(file=photo_location)
                    self.imgResult.configure(image=self._img1)
                    self.lblName.configure(text='Hello '+name)
                    self.lblDetection.configure(text='''NO DETECTION OF HEART DISEASE''')
                    self.lblSuggestion.configure(text='''Do not forget to exercise daily.''')
                elif final_Result==1:
                    photo_location = os.path.join(prog_location,"GUIImages\Sad_Icon.png")
                    self._img1 = tk.PhotoImage(file=photo_location)
                    self.imgResult.configure(image=self._img1)
                    self.lblName.configure(text='Hello '+name)
                    self.lblDetection.configure(text='''HEART DISEASE DETECTED''')
                    self.lblSuggestion.configure(text='''Please visit the nearest hospital immediately.''')
            else:
                print('Please Enter Valid input')
                messagebox.showwarning('Invalid Input','Please enter all correct Value ')

        def EXIT(event):
            top.destroy()
            Heart_Disease_GUI.vp_start_gui()

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font12 = "-family {Sitka Small} -size 21 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font13 = "-family {Sitka Small} -size 23 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font14 = "-family {Sitka Small} -size 30 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font16 = "-family {Segoe UI} -size 14 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font17 = "-family {Courier New} -size 15 -weight bold -slant "  \
            "italic -underline 0 -overstrike 0"
        font18 = "-family {Segoe UI} -size 11 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font20 = "-family {Sitka Small} -size 14 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font21 = "-family {Segoe UI} -size 15 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"

        top.geometry("1415x913")
        top.title("New Toplevel")
        top.configure(background="#000000")
        top.state('zoomed')

        self.frameEnterDetails = tk.Frame(top)
        self.frameEnterDetails.place(relx=0.004, rely=0.011, relheight=0.98
                , relwidth=0.597)
        self.frameEnterDetails.configure(relief='groove')
        self.frameEnterDetails.configure(borderwidth="2")
        self.frameEnterDetails.configure(relief="groove")
        self.frameEnterDetails.configure(background="#000000")
        self.frameEnterDetails.configure(width=845)

        self.Label1_1 = tk.Label(self.frameEnterDetails)
        self.Label1_1.place(relx=0.118, rely=0.006, height=48, width=634)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(activeforeground="black")
        self.Label1_1.configure(background="#000000")
        self.Label1_1.configure(disabledforeground="#a3a3a3")
        self.Label1_1.configure(font=font13)
        self.Label1_1.configure(foreground="#60f7a7")
        self.Label1_1.configure(highlightbackground="#d9d9d9")
        self.Label1_1.configure(highlightcolor="black")
        self.Label1_1.configure(text='''Enter the details carefully''')
        self.Label1_1.configure(width=634)

        self.Labelframe1 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1.place(relx=0.03, rely=0.089, relheight=0.117
                , relwidth=0.331)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(font=font20)
        self.Labelframe1.configure(foreground="#ffffff")
        self.Labelframe1.configure(text='''Name''')
        self.Labelframe1.configure(background="#000000")
        self.Labelframe1.configure(width=280)

        self.txtName = tk.Entry(self.Labelframe1)
        self.txtName.place(relx=0.036, rely=0.476, height=34, relwidth=0.907
                , bordermode='ignore')
        self.txtName.configure(background="white")
        self.txtName.configure(disabledforeground="#a3a3a3")
        self.txtName.configure(font=font17)
        self.txtName.configure(foreground="#000000")
        self.txtName.configure(highlightbackground="#d9d9d9")
        self.txtName.configure(highlightcolor="black")
        self.txtName.configure(insertbackground="black")
        self.txtName.configure(justify='center')
        self.txtName.configure(selectbackground="#c4c4c4")
        self.txtName.configure(selectforeground="black")

        self.Labelframe1_12 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_12.place(relx=0.39, rely=0.089, relheight=0.162
                , relwidth=0.272)
        self.Labelframe1_12.configure(relief='groove')
        self.Labelframe1_12.configure(font=font20)
        self.Labelframe1_12.configure(foreground="#ffffff")
        self.Labelframe1_12.configure(text='''Gender''')
        self.Labelframe1_12.configure(background="#000000")
        self.Labelframe1_12.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_12.configure(highlightcolor="black")
        self.Labelframe1_12.configure(width=230)

        self.btnMale = tk.Button(self.Labelframe1_12)
        self.btnMale.place(relx=0.13, rely=0.414, height=62, width=69
                , bordermode='ignore')
        self.btnMale.configure(activebackground="#ececec")
        self.btnMale.configure(activeforeground="#000000")
        self.btnMale.configure(background="#000000")
        self.btnMale.configure(disabledforeground="#a3a3a3")
        self.btnMale.configure(font=font18)
        self.btnMale.configure(foreground="#ffffff")
        self.btnMale.configure(highlightbackground="#d9d9d9")
        self.btnMale.configure(highlightcolor="black")
        self.btnMale.configure(pady="0")
        self.btnMale.configure(text='''Male''')
        self.btnMale.configure(width=69)
        self.btnMale.bind('<Button-1>',btnMale)

        self.btnFemale = tk.Button(self.Labelframe1_12)
        self.btnFemale.place(relx=0.522, rely=0.414, height=62, width=79
                , bordermode='ignore')
        self.btnFemale.configure(activebackground="#ececec")
        self.btnFemale.configure(activeforeground="#000000")
        self.btnFemale.configure(background="#000000")
        self.btnFemale.configure(disabledforeground="#a3a3a3")
        self.btnFemale.configure(font=font18)
        self.btnFemale.configure(foreground="#ffffff")
        self.btnFemale.configure(highlightbackground="#d9d9d9")
        self.btnFemale.configure(highlightcolor="black")
        self.btnFemale.configure(pady="0")
        self.btnFemale.configure(text='''Female''')
        self.btnFemale.configure(width=79)
        self.btnFemale.bind('<Button-1>',btnFemale)

        self.Labelframe1_13 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_13.place(relx=0.805, rely=0.48, relheight=0.173
                , relwidth=0.166)
        self.Labelframe1_13.configure(relief='groove')
        self.Labelframe1_13.configure(font=font20)
        self.Labelframe1_13.configure(foreground="#ffffff")
        self.Labelframe1_13.configure(text='''Age (Year)''')
        self.Labelframe1_13.configure(background="#000000")
        self.Labelframe1_13.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_13.configure(highlightcolor="black")
        self.Labelframe1_13.configure(width=140)

        self.txtAge = tk.Entry(self.Labelframe1_13)
        self.txtAge.place(relx=0.179, rely=0.387, height=44, relwidth=0.671
                , bordermode='ignore')
        self.txtAge.configure(background="white")
        self.txtAge.configure(disabledforeground="#a3a3a3")
        self.txtAge.configure(font=font17)
        self.txtAge.configure(foreground="#000000")
        self.txtAge.configure(highlightbackground="#d9d9d9")
        self.txtAge.configure(highlightcolor="black")
        self.txtAge.configure(insertbackground="black")
        self.txtAge.configure(justify='center')
        self.txtAge.configure(selectbackground="#c4c4c4")
        self.txtAge.configure(selectforeground="black")
        self.txtAge.configure(width=94)

        self.Labelframe1_13 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_13.place(relx=0.03, rely=0.235, relheight=0.117
                , relwidth=0.331)
        self.Labelframe1_13.configure(relief='groove')
        self.Labelframe1_13.configure(font=font20)
        self.Labelframe1_13.configure(foreground="#ffffff")
        self.Labelframe1_13.configure(text='''Chest Pain Type''')
        self.Labelframe1_13.configure(background="#000000")
        self.Labelframe1_13.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_13.configure(highlightcolor="black")
        self.Labelframe1_13.configure(width=280)


        types_CP = ["Typical angina","Atypical angina","Non-anginal pain","Asymptomatic"]
        self.txtCP = ttk.Combobox(self.Labelframe1_13,values=types_CP)
        self.txtCP.place(relx=0.036, rely=0.476, height=34, relwidth=0.907
                , bordermode='ignore')
        self.txtCP.configure(background="white")
        self.txtCP.configure(font=font17)
        self.txtCP.configure(foreground="#000000")
        self.txtCP.configure(justify='center')

        self.Labelframe1_14 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_14.place(relx=0.391, rely=0.48, relheight=0.173
                , relwidth=0.379)
        self.Labelframe1_14.configure(relief='groove')
        self.Labelframe1_14.configure(font=font20)
        self.Labelframe1_14.configure(foreground="#ffffff")
        self.Labelframe1_14.configure(text='''Resting Blood Pressure''')
        self.Labelframe1_14.configure(background="#000000")
        self.Labelframe1_14.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_14.configure(highlightcolor="black")
        self.Labelframe1_14.configure(width=320)

        self.txtTrestbps = tk.Entry(self.Labelframe1_14)
        self.txtTrestbps.place(relx=0.344, rely=0.548, height=44, relwidth=0.263
                , bordermode='ignore')
        self.txtTrestbps.configure(background="white")
        self.txtTrestbps.configure(disabledforeground="#a3a3a3")
        self.txtTrestbps.configure(font=font17)
        self.txtTrestbps.configure(foreground="#000000")
        self.txtTrestbps.configure(highlightbackground="#d9d9d9")
        self.txtTrestbps.configure(highlightcolor="black")
        self.txtTrestbps.configure(insertbackground="black")
        self.txtTrestbps.configure(justify='center')
        self.txtTrestbps.configure(selectbackground="#c4c4c4")
        self.txtTrestbps.configure(selectforeground="black")
        self.txtTrestbps.configure(width=84)

        self.Label3_7 = tk.Label(self.Labelframe1_14)
        self.Label3_7.place(relx=0.219, rely=0.29, height=27, width=169
                , bordermode='ignore')
        self.Label3_7.configure(activebackground="#f9f9f9")
        self.Label3_7.configure(activeforeground="black")
        self.Label3_7.configure(background="#000000")
        self.Label3_7.configure(disabledforeground="#a3a3a3")
        self.Label3_7.configure(font=font16)
        self.Label3_7.configure(foreground="#ffffff")
        self.Label3_7.configure(highlightbackground="#d9d9d9")
        self.Label3_7.configure(highlightcolor="black")
        self.Label3_7.configure(text='''(94 - 200) mm''')
        self.Label3_7.configure(width=169)

        self.Labelframe1_8 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_8.place(relx=0.698, rely=0.682, relheight=0.162
                , relwidth=0.284)
        self.Labelframe1_8.configure(relief='groove')
        self.Labelframe1_8.configure(font=font20)
        self.Labelframe1_8.configure(foreground="#ffffff")
        self.Labelframe1_8.configure(text='''Serum Cholestora''')
        self.Labelframe1_8.configure(background="#000000")
        self.Labelframe1_8.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_8.configure(highlightcolor="black")
        self.Labelframe1_8.configure(width=240)

        self.txtChol = tk.Entry(self.Labelframe1_8)
        self.txtChol.place(relx=0.313, rely=0.586, height=44, relwidth=0.35
                , bordermode='ignore')
        self.txtChol.configure(background="white")
        self.txtChol.configure(disabledforeground="#a3a3a3")
        self.txtChol.configure(font=font17)
        self.txtChol.configure(foreground="#000000")
        self.txtChol.configure(highlightbackground="#d9d9d9")
        self.txtChol.configure(highlightcolor="black")
        self.txtChol.configure(insertbackground="black")
        self.txtChol.configure(justify='center')
        self.txtChol.configure(selectbackground="#c4c4c4")
        self.txtChol.configure(selectforeground="black")

        self.Label3_8 = tk.Label(self.Labelframe1_8)
        self.Label3_8.place(relx=0.042, rely=0.276, height=27, width=199
                , bordermode='ignore')
        self.Label3_8.configure(activebackground="#f9f9f9")
        self.Label3_8.configure(activeforeground="black")
        self.Label3_8.configure(background="#000000")
        self.Label3_8.configure(disabledforeground="#a3a3a3")
        self.Label3_8.configure(font=font16)
        self.Label3_8.configure(foreground="#ffffff")
        self.Label3_8.configure(highlightbackground="#d9d9d9")
        self.Label3_8.configure(highlightcolor="black")
        self.Label3_8.configure(text='''(126 - 564) mg/dl''')
        self.Label3_8.configure(width=199)

        self.Labelframe1_9 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_9.place(relx=0.024, rely=0.704, relheight=0.117
                , relwidth=0.343)
        self.Labelframe1_9.configure(relief='groove')
        self.Labelframe1_9.configure(font=font20)
        self.Labelframe1_9.configure(foreground="#ffffff")
        self.Labelframe1_9.configure(text='''Fasting Blood Sugar''')
        self.Labelframe1_9.configure(background="#000000")
        self.Labelframe1_9.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_9.configure(highlightcolor="black")
        self.Labelframe1_9.configure(width=290)

        types_Fbs = ['No','Yes']
        self.txtFbs = ttk.Combobox(self.Labelframe1_9,values=types_Fbs)
        self.txtFbs.place(relx=0.069, rely=0.429, height=44, relwidth=0.807
                , bordermode='ignore')
        self.txtFbs.configure(background="white")
        self.txtFbs.configure(font=font17)
        self.txtFbs.configure(foreground="#000000")
        self.txtFbs.configure(justify='center')
        self.txtFbs.configure(width=234)

        self.Labelframe1_9 = tk.LabelFrame(self.Labelframe1_9)
        self.Labelframe1_9.place(relx=0.931, rely=5.381, relheight=1.381
                , relwidth=0.828, bordermode='ignore')
        self.Labelframe1_9.configure(relief='groove')
        self.Labelframe1_9.configure(font=font20)
        self.Labelframe1_9.configure(foreground="#ffffff")
        self.Labelframe1_9.configure(text='''Serum Cholestora''')
        self.Labelframe1_9.configure(background="#000000")
        self.Labelframe1_9.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_9.configure(highlightcolor="black")
        self.Labelframe1_9.configure(width=240)

        self.Entry1_10 = tk.Entry(self.Labelframe1_9)
        self.Entry1_10.place(relx=0.292, rely=0.586, height=44, relwidth=0.35
                , bordermode='ignore')
        self.Entry1_10.configure(background="white")
        self.Entry1_10.configure(disabledforeground="#a3a3a3")
        self.Entry1_10.configure(font=font17)
        self.Entry1_10.configure(foreground="#000000")
        self.Entry1_10.configure(highlightbackground="#d9d9d9")
        self.Entry1_10.configure(highlightcolor="black")
        self.Entry1_10.configure(insertbackground="black")
        self.Entry1_10.configure(justify='center')
        self.Entry1_10.configure(selectbackground="#c4c4c4")
        self.Entry1_10.configure(selectforeground="black")

        self.Label3_9 = tk.Label(self.Labelframe1_9)
        self.Label3_9.place(relx=0.042, rely=0.276, height=27, width=199
                , bordermode='ignore')
        self.Label3_9.configure(activebackground="#f9f9f9")
        self.Label3_9.configure(activeforeground="black")
        self.Label3_9.configure(background="#000000")
        self.Label3_9.configure(disabledforeground="#a3a3a3")
        self.Label3_9.configure(font=font16)
        self.Label3_9.configure(foreground="#ffffff")
        self.Label3_9.configure(highlightbackground="#d9d9d9")
        self.Label3_9.configure(highlightcolor="black")
        self.Label3_9.configure(text='''(126 - 564) mg/dl''')

        self.Labelframe1_9 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_9.place(relx=0.024, rely=0.849, relheight=0.117
                , relwidth=0.343)
        self.Labelframe1_9.configure(relief='groove')
        self.Labelframe1_9.configure(font=font20)
        self.Labelframe1_9.configure(foreground="#ffffff")
        self.Labelframe1_9.configure(text='''Resting ECG Result''')
        self.Labelframe1_9.configure(background="#000000")
        self.Labelframe1_9.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_9.configure(highlightcolor="black")
        self.Labelframe1_9.configure(width=290)

        types_ECG = ["Normal","Having ST-T wave abnormality","Showing probable"]
        self.txtRestECG = ttk.Combobox(self.Labelframe1_9,values=types_ECG)
        self.txtRestECG.place(relx=0.069, rely=0.381, height=44, relwidth=0.841
                , bordermode='ignore')
        self.txtRestECG.configure(background="white")
        self.txtRestECG.configure(font=font17)
        self.txtRestECG.configure(foreground="#000000")
        self.txtRestECG.configure(justify='center')
        self.txtRestECG.configure(width=244)

        self.Labelframe1_9 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_9.place(relx=0.024, rely=0.53, relheight=0.15
                , relwidth=0.343)
        self.Labelframe1_9.configure(relief='groove')
        self.Labelframe1_9.configure(font=font20)
        self.Labelframe1_9.configure(foreground="#ffffff")
        self.Labelframe1_9.configure(text='''Rest Exercise Peak''')
        self.Labelframe1_9.configure(background="#000000")
        self.Labelframe1_9.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_9.configure(highlightcolor="black")
        self.Labelframe1_9.configure(width=290)

        self.txtOldPeak = tk.Entry(self.Labelframe1_9)
        self.txtOldPeak.place(relx=0.086, rely=0.45, height=44, relwidth=0.807
                , bordermode='ignore')
        self.txtOldPeak.configure(background="white")
        self.txtOldPeak.configure(disabledforeground="#a3a3a3")
        self.txtOldPeak.configure(font=font17)
        self.txtOldPeak.configure(foreground="#000000")
        self.txtOldPeak.configure(highlightbackground="#d9d9d9")
        self.txtOldPeak.configure(highlightcolor="black")
        self.txtOldPeak.configure(insertbackground="black")
        self.txtOldPeak.configure(justify='center')
        self.txtOldPeak.configure(selectbackground="#c4c4c4")
        self.txtOldPeak.configure(selectforeground="black")
        self.txtOldPeak.configure(width=234)

        self.Label3_9 = tk.Label(self.Labelframe1_9)
        self.Label3_9.place(relx=0.18, rely=0.2, height=27, width=199
                , bordermode='ignore')
        self.Label3_9.configure(activebackground="#f9f9f9")
        self.Label3_9.configure(activeforeground="black")
        self.Label3_9.configure(background="#000000")
        self.Label3_9.configure(disabledforeground="#a3a3a3")
        self.Label3_9.configure(font=font16)
        self.Label3_9.configure(foreground="#ffffff")
        self.Label3_9.configure(highlightbackground="#d9d9d9")
        self.Label3_9.configure(highlightcolor="black")
        self.Label3_9.configure(text='''(0 - 6.2)''')
        self.Label3_9.configure(width=199)

        self.Labelframe1_10 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_10.place(relx=0.734, rely=0.095, relheight=0.162
                , relwidth=0.237)
        self.Labelframe1_10.configure(relief='groove')
        self.Labelframe1_10.configure(font=font20)
        self.Labelframe1_10.configure(foreground="#ffffff")
        self.Labelframe1_10.configure(text='''Major Vessels''')
        self.Labelframe1_10.configure(background="#000000")
        self.Labelframe1_10.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_10.configure(highlightcolor="black")
        self.Labelframe1_10.configure(width=200)

        self.txtCA = tk.Entry(self.Labelframe1_10)
        self.txtCA.place(relx=0.25, rely=0.586, height=44, relwidth=0.47
                , bordermode='ignore')
        self.txtCA.configure(background="white")
        self.txtCA.configure(disabledforeground="#a3a3a3")
        self.txtCA.configure(font=font17)
        self.txtCA.configure(foreground="#000000")
        self.txtCA.configure(highlightbackground="#d9d9d9")
        self.txtCA.configure(highlightcolor="black")
        self.txtCA.configure(insertbackground="black")
        self.txtCA.configure(justify='center')
        self.txtCA.configure(selectbackground="#c4c4c4")
        self.txtCA.configure(selectforeground="black")
        self.txtCA.configure(width=94)

        self.Label3_9 = tk.Label(self.Labelframe1_10)
        self.Label3_9.place(relx=0.06, rely=0.3, height=27, width=199
                , bordermode='ignore')
        self.Label3_9.configure(activebackground="#f9f9f9")
        self.Label3_9.configure(activeforeground="black")
        self.Label3_9.configure(background="#000000")
        self.Label3_9.configure(disabledforeground="#a3a3a3")
        self.Label3_9.configure(font=font16)
        self.Label3_9.configure(foreground="#ffffff")
        self.Label3_9.configure(highlightbackground="#d9d9d9")
        self.Label3_9.configure(highlightcolor="black")
        self.Label3_9.configure(text='''(0 - 4)''')
        self.Label3_9.configure(width=199)


        self.Labelframe1_10 = tk.LabelFrame(self.Labelframe1_10)
        self.Labelframe1_10.place(relx=3.15, rely=4.69, relheight=1.0
                , relwidth=1.2, bordermode='ignore')
        self.Labelframe1_10.configure(relief='groove')
        self.Labelframe1_10.configure(font=font20)
        self.Labelframe1_10.configure(foreground="#ffffff")
        self.Labelframe1_10.configure(text='''Serum Cholestora''')
        self.Labelframe1_10.configure(background="#000000")
        self.Labelframe1_10.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_10.configure(highlightcolor="black")
        self.Labelframe1_10.configure(width=240)

        self.Entry1_11 = tk.Entry(self.Labelframe1_10)
        self.Entry1_11.place(relx=0.292, rely=0.586, height=44, relwidth=0.35
                , bordermode='ignore')
        self.Entry1_11.configure(background="white")
        self.Entry1_11.configure(disabledforeground="#a3a3a3")
        self.Entry1_11.configure(font=font17)
        self.Entry1_11.configure(foreground="#000000")
        self.Entry1_11.configure(highlightbackground="#d9d9d9")
        self.Entry1_11.configure(highlightcolor="black")
        self.Entry1_11.configure(insertbackground="black")
        self.Entry1_11.configure(justify='center')
        self.Entry1_11.configure(selectbackground="#c4c4c4")
        self.Entry1_11.configure(selectforeground="black")

        self.Label3_10 = tk.Label(self.Labelframe1_10)
        self.Label3_10.place(relx=0.042, rely=0.276, height=27, width=199
                , bordermode='ignore')
        self.Label3_10.configure(activebackground="#f9f9f9")
        self.Label3_10.configure(activeforeground="black")
        self.Label3_10.configure(background="#000000")
        self.Label3_10.configure(disabledforeground="#a3a3a3")
        self.Label3_10.configure(font=font16)
        self.Label3_10.configure(foreground="#ffffff")
        self.Label3_10.configure(highlightbackground="#d9d9d9")
        self.Label3_10.configure(highlightcolor="black")
        self.Label3_10.configure(text='''(126 - 564) mg/dl''')

        self.Labelframe1_10 = tk.LabelFrame(self.Labelframe1_10)
        self.Labelframe1_10.place(relx=2.625, rely=4.69, relheight=1.0
                , relwidth=1.0, bordermode='ignore')
        self.Labelframe1_10.configure(relief='groove')
        self.Labelframe1_10.configure(font=font20)
        self.Labelframe1_10.configure(foreground="#ffffff")
        self.Labelframe1_10.configure(text='''Serum Cholestora''')
        self.Labelframe1_10.configure(background="#000000")
        self.Labelframe1_10.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_10.configure(highlightcolor="black")
        self.Labelframe1_10.configure(width=240)

        self.Entry1_11 = tk.Entry(self.Labelframe1_10)
        self.Entry1_11.place(relx=0.292, rely=0.586, height=44, relwidth=0.35
                , bordermode='ignore')
        self.Entry1_11.configure(background="white")
        self.Entry1_11.configure(disabledforeground="#a3a3a3")
        self.Entry1_11.configure(font=font17)
        self.Entry1_11.configure(foreground="#000000")
        self.Entry1_11.configure(highlightbackground="#d9d9d9")
        self.Entry1_11.configure(highlightcolor="black")
        self.Entry1_11.configure(insertbackground="black")
        self.Entry1_11.configure(justify='center')
        self.Entry1_11.configure(selectbackground="#c4c4c4")
        self.Entry1_11.configure(selectforeground="black")

        self.Label3_10 = tk.Label(self.Labelframe1_10)
        self.Label3_10.place(relx=0.042, rely=0.276, height=27, width=199
                , bordermode='ignore')
        self.Label3_10.configure(activebackground="#f9f9f9")
        self.Label3_10.configure(activeforeground="black")
        self.Label3_10.configure(background="#000000")
        self.Label3_10.configure(disabledforeground="#a3a3a3")
        self.Label3_10.configure(font=font16)
        self.Label3_10.configure(foreground="#ffffff")
        self.Label3_10.configure(highlightbackground="#d9d9d9")
        self.Label3_10.configure(highlightcolor="black")
        self.Label3_10.configure(text='''(126 - 564) mg/dl''')

        self.Label3_10 = tk.Label(self.Labelframe1_10)
        self.Label3_10.place(relx=0.125, rely=0.276, height=27, width=149
                , bordermode='ignore')
        self.Label3_10.configure(activebackground="#f9f9f9")
        self.Label3_10.configure(activeforeground="black")
        self.Label3_10.configure(background="#000000")
        self.Label3_10.configure(disabledforeground="#a3a3a3")
        self.Label3_10.configure(font=font16)
        self.Label3_10.configure(foreground="#ffffff")
        self.Label3_10.configure(highlightbackground="#d9d9d9")
        self.Label3_10.configure(highlightcolor="black")
        self.Label3_10.configure(text='''(0 - 4)''')
        self.Label3_10.configure(width=149)

        self.Labelframe1_10 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_10.place(relx=0.39, rely=0.285, relheight=0.162
                , relwidth=0.225)
        self.Labelframe1_10.configure(relief='groove')
        self.Labelframe1_10.configure(font=font20)
        self.Labelframe1_10.configure(foreground="#ffffff")
        self.Labelframe1_10.configure(text='''Thalassemia''')
        self.Labelframe1_10.configure(background="#000000")
        self.Labelframe1_10.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_10.configure(highlightcolor="black")
        self.Labelframe1_10.configure(width=190)

        self.txtThal = tk.Entry(self.Labelframe1_10)
        self.txtThal.place(relx=0.263, rely=0.586, height=44, relwidth=0.442
                , bordermode='ignore')
        self.txtThal.configure(background="white")
        self.txtThal.configure(disabledforeground="#a3a3a3")
        self.txtThal.configure(font=font17)
        self.txtThal.configure(foreground="#000000")
        self.txtThal.configure(highlightbackground="#d9d9d9")
        self.txtThal.configure(highlightcolor="black")
        self.txtThal.configure(insertbackground="black")
        self.txtThal.configure(justify='center')
        self.txtThal.configure(selectbackground="#c4c4c4")
        self.txtThal.configure(selectforeground="black")

        self.Label3_10 = tk.Label(self.Labelframe1_10)
        self.Label3_10.place(relx=0.02, rely=0.3, height=27, width=199
                , bordermode='ignore')
        self.Label3_10.configure(activebackground="#f9f9f9")
        self.Label3_10.configure(activeforeground="black")
        self.Label3_10.configure(background="#000000")
        self.Label3_10.configure(disabledforeground="#a3a3a3")
        self.Label3_10.configure(font=font16)
        self.Label3_10.configure(foreground="#ffffff")
        self.Label3_10.configure(highlightbackground="#d9d9d9")
        self.Label3_10.configure(highlightcolor="black")
        self.Label3_10.configure(text='''(0 - 3)''')

        self.Labelframe1_10 = tk.LabelFrame(self.Labelframe1_10)
        self.Labelframe1_10.place(relx=2.974, rely=4.276, relheight=1.0
                , relwidth=1.263, bordermode='ignore')
        self.Labelframe1_10.configure(relief='groove')
        self.Labelframe1_10.configure(font=font20)
        self.Labelframe1_10.configure(foreground="#ffffff")
        self.Labelframe1_10.configure(text='''Serum Cholestora''')
        self.Labelframe1_10.configure(background="#000000")
        self.Labelframe1_10.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_10.configure(highlightcolor="black")
        self.Labelframe1_10.configure(width=240)

        self.Entry1_11 = tk.Entry(self.Labelframe1_10)
        self.Entry1_11.place(relx=0.292, rely=0.586, height=44, relwidth=0.35
                , bordermode='ignore')
        self.Entry1_11.configure(background="white")
        self.Entry1_11.configure(disabledforeground="#a3a3a3")
        self.Entry1_11.configure(font=font17)
        self.Entry1_11.configure(foreground="#000000")
        self.Entry1_11.configure(highlightbackground="#d9d9d9")
        self.Entry1_11.configure(highlightcolor="black")
        self.Entry1_11.configure(insertbackground="black")
        self.Entry1_11.configure(justify='center')
        self.Entry1_11.configure(selectbackground="#c4c4c4")
        self.Entry1_11.configure(selectforeground="black")

        self.Label3_10 = tk.Label(self.Labelframe1_10)
        self.Label3_10.place(relx=0.042, rely=0.276, height=27, width=199
                , bordermode='ignore')
        self.Label3_10.configure(activebackground="#f9f9f9")
        self.Label3_10.configure(activeforeground="black")
        self.Label3_10.configure(background="#000000")
        self.Label3_10.configure(disabledforeground="#a3a3a3")
        self.Label3_10.configure(font=font16)
        self.Label3_10.configure(foreground="#ffffff")
        self.Label3_10.configure(highlightbackground="#d9d9d9")
        self.Label3_10.configure(highlightcolor="black")
        self.Label3_10.configure(text='''(126 - 564) mg/dl''')

        self.Label3_11 = tk.Label(self.Labelframe1_10)
        self.Label3_11.place(relx=0.105, rely=0.276, height=27, width=149
                , bordermode='ignore')
        self.Label3_11.configure(activebackground="#f9f9f9")
        self.Label3_11.configure(activeforeground="black")
        self.Label3_11.configure(background="#000000")
        self.Label3_11.configure(disabledforeground="#a3a3a3")
        self.Label3_11.configure(font=font16)
        self.Label3_11.configure(foreground="#ffffff")
        self.Label3_11.configure(highlightbackground="#d9d9d9")
        self.Label3_11.configure(highlightcolor="black")
        self.Label3_11.configure(text='''(0 - 3 )''')
        self.Label3_11.configure(width=149)

        self.Labelframe1_10 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_10.place(relx=0.391, rely=0.67, relheight=0.173
                , relwidth=0.284)
        self.Labelframe1_10.configure(relief='groove')
        self.Labelframe1_10.configure(font=font20)
        self.Labelframe1_10.configure(foreground="#ffffff")
        self.Labelframe1_10.configure(text='''Exercise''')
        self.Labelframe1_10.configure(background="#000000")
        self.Labelframe1_10.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_10.configure(highlightcolor="black")
        self.Labelframe1_10.configure(width=240)

        types_Exercise = ['No','Yes']
        self.txtExang = ttk.Combobox(self.Labelframe1_10,values=types_Exercise)
        self.txtExang.place(relx=0.083, rely=0.452, height=44, relwidth=0.85
                , bordermode='ignore')
        self.txtExang.configure(background="white")
        self.txtExang.configure(font=font17)
        self.txtExang.configure(foreground="#000000")
        self.txtExang.configure(justify='center')
        self.txtExang.configure(width=204)

        self.Labelframe1_10 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_10.place(relx=0.641, rely=0.291, relheight=0.162
                , relwidth=0.331)
        self.Labelframe1_10.configure(relief='groove')
        self.Labelframe1_10.configure(font=font20)
        self.Labelframe1_10.configure(foreground="#ffffff")
        self.Labelframe1_10.configure(text='''Maximum Heart Rate''')
        self.Labelframe1_10.configure(background="#000000")
        self.Labelframe1_10.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_10.configure(highlightcolor="black")
        self.Labelframe1_10.configure(width=280)

        self.txtThalach = tk.Entry(self.Labelframe1_10)
        self.txtThalach.place(relx=0.304, rely=0.586, height=44, relwidth=0.407
                , bordermode='ignore')
        self.txtThalach.configure(background="white")
        self.txtThalach.configure(disabledforeground="#a3a3a3")
        self.txtThalach.configure(font=font17)
        self.txtThalach.configure(foreground="#000000")
        self.txtThalach.configure(highlightbackground="#d9d9d9")
        self.txtThalach.configure(highlightcolor="black")
        self.txtThalach.configure(insertbackground="black")
        self.txtThalach.configure(justify='center')
        self.txtThalach.configure(selectbackground="#c4c4c4")
        self.txtThalach.configure(selectforeground="black")
        self.txtThalach.configure(width=114)

        self.Label3_10 = tk.Label(self.Labelframe1_10)
        self.Label3_10.place(relx=0.143, rely=0.276, height=27, width=199
                , bordermode='ignore')
        self.Label3_10.configure(activebackground="#f9f9f9")
        self.Label3_10.configure(activeforeground="black")
        self.Label3_10.configure(background="#000000")
        self.Label3_10.configure(disabledforeground="#a3a3a3")
        self.Label3_10.configure(font=font16)
        self.Label3_10.configure(foreground="#ffffff")
        self.Label3_10.configure(highlightbackground="#d9d9d9")
        self.Label3_10.configure(highlightcolor="black")
        self.Label3_10.configure(text='''(71 - 202)''')

        self.Labelframe1_10 = tk.LabelFrame(self.frameEnterDetails)
        self.Labelframe1_10.place(relx=0.024, rely=0.385, relheight=0.128
                , relwidth=0.343)
        self.Labelframe1_10.configure(relief='groove')
        self.Labelframe1_10.configure(font=font20)
        self.Labelframe1_10.configure(foreground="#ffffff")
        self.Labelframe1_10.configure(text='''Slope of Peak Exercise''')
        self.Labelframe1_10.configure(background="#000000")
        self.Labelframe1_10.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_10.configure(highlightcolor="black")
        self.Labelframe1_10.configure(width=290)

        type_Slope = ["Upsloping","Flat","Downsloping"]
        self.txtSlope = ttk.Combobox(self.Labelframe1_10,values=type_Slope)
        self.txtSlope.place(relx=0.069, rely=0.435, height=44, relwidth=0.841
                , bordermode='ignore')
        self.txtSlope.configure(background="white")
        self.txtSlope.configure(font=font17)
        self.txtSlope.configure(foreground="#000000")
        self.txtSlope.configure(justify='center')
        self.txtSlope.configure(width=244)

        self.btnAnalyze = tk.Button(self.frameEnterDetails)
        self.btnAnalyze.place(relx=0.391, rely=0.872, height=82, width=540)
        self.btnAnalyze.configure(activebackground="#ececec")
        self.btnAnalyze.configure(activeforeground="#000000")
        self.btnAnalyze.configure(background="#17172d")
        self.btnAnalyze.configure(disabledforeground="#a3a3a3")
        self.btnAnalyze.configure(font=font12)
        self.btnAnalyze.configure(foreground="#ffffff")
        self.btnAnalyze.configure(highlightbackground="#d9d9d9")
        self.btnAnalyze.configure(highlightcolor="black")
        self.btnAnalyze.configure(pady="0")
        self.btnAnalyze.configure(text='''...........ANALYZE/ PREDICT............''')
        self.btnAnalyze.configure(width=600)
        self.btnAnalyze.bind('<Button-1>',analyze_predict)

        self.frameResult = tk.Frame(top)
        self.frameResult.place(relx=0.611, rely=0.016, relheight=0.969
                , relwidth=0.378)
        self.frameResult.configure(relief='groove')
        self.frameResult.configure(borderwidth="2")
        self.frameResult.configure(relief="groove")
        self.frameResult.configure(background="#000000")
        self.frameResult.configure(width=535)

        self.imgAnimation = tk.Label(self.frameResult)
        self.imgAnimation.place(relx=0.037, rely=0.011, height=254, width=504)
        self.imgAnimation.configure(activebackground="#f9f9f9")
        self.imgAnimation.configure(activeforeground="black")
        self.imgAnimation.configure(background="#000000")
        self.imgAnimation.configure(disabledforeground="#a3a3a3")
        self.imgAnimation.configure(foreground="#000000")
        self.imgAnimation.configure(highlightbackground="#d9d9d9")
        self.imgAnimation.configure(highlightcolor="black")
        self.imgAnimation.configure(text='''Label''')
        self.imgAnimation.configure(width=504)
        lbl = ImageLabel(self.imgAnimation)
        lbl.pack()
        lbl.load("GUIImages/Live_Prediction.gif")

        self.Label1 = tk.Label(self.frameResult)
        self.Label1.place(relx=0.308, rely=0.288, height=48, width=224)
        self.Label1.configure(background="#000000")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font14)
        self.Label1.configure(foreground="#ffffff")
        self.Label1.configure(text='''Result''')
        self.Label1.configure(width=224)

        self.imgResult = tk.Label(self.frameResult)
        self.imgResult.place(relx=0.271, rely=0.384, height=264, width=250)
        self.imgResult.configure(background="#000000")
        self.imgResult.configure(disabledforeground="#a3a3a3")
        self.imgResult.configure(foreground="#000000")
        # photo_location = os.path.join(prog_location,"GUIImages/smile.png")
        # self._img1 = tk.PhotoImage(file=photo_location)
        # self.imgResult.configure(image=self._img1)
        self.imgResult.configure(text='''Label''')

        self.lblName = tk.Label(self.frameResult)
        self.lblName.place(relx=0.327, rely=0.712, height=27, width=199)
        self.lblName.configure(activebackground="#f9f9f9")
        self.lblName.configure(activeforeground="black")
        self.lblName.configure(background="#000000")
        self.lblName.configure(disabledforeground="#a3a3a3")
        self.lblName.configure(font=font16)
        self.lblName.configure(foreground="#ffffff")
        self.lblName.configure(highlightbackground="#d9d9d9")
        self.lblName.configure(highlightcolor="black")
        # self.lblName.configure(text='''Hello Sahil''')

        self.lblSuggestion = tk.Label(self.frameResult)
        self.lblSuggestion.place(relx=0.037, rely=0.819, height=27, width=499)
        self.lblSuggestion.configure(activebackground="#f9f9f9")
        self.lblSuggestion.configure(activeforeground="black")
        self.lblSuggestion.configure(background="#000000")
        self.lblSuggestion.configure(disabledforeground="#a3a3a3")
        self.lblSuggestion.configure(font=font16)
        self.lblSuggestion.configure(foreground="#ffffff")
        self.lblSuggestion.configure(highlightbackground="#d9d9d9")
        self.lblSuggestion.configure(highlightcolor="black")
        # self.lblSuggestion.configure(text='''Do not forget to exercise daily.''')
        self.lblSuggestion.configure(width=499)

        self.lblDetection = tk.Label(self.frameResult)
        self.lblDetection.place(relx=0.019, rely=0.768, height=27, width=509)
        self.lblDetection.configure(activebackground="#f9f9f9")
        self.lblDetection.configure(activeforeground="black")
        self.lblDetection.configure(background="#000000")
        self.lblDetection.configure(disabledforeground="#a3a3a3")
        self.lblDetection.configure(font=font16)
        self.lblDetection.configure(foreground="#ffffff")
        self.lblDetection.configure(highlightbackground="#d9d9d9")
        self.lblDetection.configure(highlightcolor="black")
        # self.lblDetection.configure(text='''NO DETECTION OF HEART DISEASE''')
        self.lblDetection.configure(width=509)

        self.btnExit = tk.Button(self.frameResult)
        self.btnExit.place(relx=0.37, rely=0.887, height=62, width=149)
        self.btnExit.configure(activebackground="#ececec")
        self.btnExit.configure(activeforeground="#000000")
        self.btnExit.configure(background="#4f4f4f")
        self.btnExit.configure(disabledforeground="#a3a3a3")
        self.btnExit.configure(font=font21)
        self.btnExit.configure(foreground="#ffffff")
        self.btnExit.configure(highlightbackground="#d9d9d9")
        self.btnExit.configure(highlightcolor="black")
        self.btnExit.configure(pady="0")
        self.btnExit.configure(text='''EXIT''')
        self.btnExit.configure(width=149)
        self.btnExit.bind('<Button-1>',EXIT)


        self.rf_model = pickle.load(open('Model/rf_clf.pkl','rb'))




# vp_start_gui()